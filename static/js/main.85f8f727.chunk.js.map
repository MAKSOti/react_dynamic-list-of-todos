{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","callbackTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","trim","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","lowerCompare","str","part","toLowerCase","includes","App","setTodos","setTodo","visibleTodos","setVisibleTodos","filter","Error","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85f8f727.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  callbackTodo: Dispatch<SetStateAction<Todo | null>>;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  callbackTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo?.id === todo.id },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-success': todo.completed },\n              { 'has-text-danger': !todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => callbackTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye': todo !== selectedTodo },\n                  { 'fa-eye-slash': todo === selectedTodo },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  filterBy: string;\n  setFilterBy: React.Dispatch<React.SetStateAction<string>>;\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.trim() && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            >\n              x\n            </button>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null;\n  callbackTodo: Dispatch<SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, callbackTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!todo) {\n      return;\n    }\n\n    getUser(todo.userId)\n      .then(setUser);\n  }, [todo]);\n\n  const handleClick = () => {\n    callbackTodo(null);\n    setUser(null);\n  };\n\n  return todo && (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames(\n                { 'has-text-danger': !todo?.completed },\n                { 'has-text-success': todo?.completed },\n              )}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nfunction lowerCompare(str: string, part: string): boolean {\n  return str\n    .toLowerCase()\n    .includes(part.toLowerCase());\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [todo, setTodo] = useState<Todo | null>(null);\n\n  const [filterBy, setFilterBy] = useState<string>('all');\n\n  const [query, setQuery] = useState<string>('');\n\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  useEffect((() => {\n    switch (filterBy) {\n      case 'all':\n        setVisibleTodos(todos.filter(({ title }) => lowerCompare(title, query)));\n        break;\n      case 'active':\n        setVisibleTodos(todos\n          .filter(({ completed }) => !completed)\n          .filter(({ title }) => lowerCompare(title, query)));\n        break;\n      case 'completed':\n        setVisibleTodos(todos\n          .filter(({ completed }) => completed)\n          .filter(({ title }) => lowerCompare(title, query)));\n        break;\n      default:\n        throw new Error('Warning!');\n    }\n  }), [todos, filterBy, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  callbackTodo={setTodo}\n                  selectedTodo={todo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal todo={todo} callbackTodo={setTodo} />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}